{
  "swagger": "2.0",
  "info": {
    "title": "Local Payout API",
    "version": "1.0"
  },
  "host": "example.com",
  "paths": {
    "/webhooks": {
      "post": {
        "responses": {
          "200": {
            "description": "Webhooks",
            "schema": {
              "$ref": "#/definitions/webhook"
            }
          }
        },
        "summary": "Register Webhook",
        "description": "Register a webhook in Lianlian Pay's system. Registered webhook will be used to send events generated by Lianlian Pay bank partner's system.\n\nReturn type is `Webhook` object",
        "tags": [
          "Webhook"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "register-webhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "required": [
                "name",
                "url",
                "topics"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "topics": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/webhook"
              }
            }
          }
        },
        "summary": "Get Webhook Registration List",
        "description": "Get a list of webhook registrations of a client. If no registrations, empty list will be returned.\n\nReturn type is List<`Webhook`>",
        "tags": [
          "Webhook"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "get-webhook-registration-list"
      }
    },
    "/webhooks/{webhookId}": {
      "get": {
        "responses": {
          "200": {
            "description": "Webhooks",
            "schema": {
              "$ref": "#/definitions/webhook"
            }
          }
        },
        "summary": "Get Webhook Registration",
        "description": "Get a webhook registration details by `webhookId`.\n\nReturn type is `Webhook` object",
        "tags": [
          "Webhook"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "get-webhook-registration"
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/webhook"
            }
          }
        },
        "summary": "Edit Webhook Registration",
        "description": "Edit a webhook registration by `webhookId`, such as turn on/off webhook, update webhook callback url, update registration topics.\n\nReturn type is `Webhook` object",
        "tags": [
          "Webhook"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "edit-webhook-registration",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "isEnabled": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "topics": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "webhookId",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "Webhook id in Lianlian Pay's system"
        }
      ],
      "delete": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "summary": "Delete Webhook Registration",
        "description": "Delete a webhook registration by `webhookId`",
        "tags": [
          "Webhook"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "delete-webhook-registration"
      }
    },
    "/members/{TranWebMemberId}/transactions": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/payment"
            }
          }
        },
        "summary": "Send transaction",
        "description": "Send a payment to the host after platform successfully received payment from customers. Commission amount plus MemberFillAmt should equal to the customer paid total amount. This method tracks actual payment to host and conmmission fees to platform of each order. \n\nReturn type is `transaction` object\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "send-transaction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "CnsmrSeqNo": {
                  "type": "string",
                  "description": "Unique serial number from platform"
                },
                "MemberFillAmt": {
                  "type": "string"
                },
                "Commission": {
                  "type": "string"
                },
                "PayChannelType": {
                  "type": "string"
                },
                "PayChannelAssignMerNo ": {
                  "type": "string"
                },
                "PayChannelTranSeqNo": {
                  "type": "string"
                },
                "Remark": {
                  "type": "string",
                  "description": "Remark"
                }
              },
              "required": [
                "CnsmrSeqNo",
                "MemberFillAmt",
                "Commission",
                "PayChannelType",
                "PayChannelAssignMerNo ",
                "PayChannelTranSeqNo"
              ]
            }
          }
        ],
        "tags": [
          "Transactons"
        ]
      },
      "parameters": [
        {
          "name": "TranWebMemberId",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "Member ID from platform"
        }
      ]
    },
    "/topup": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/coupon"
            }
          }
        },
        "summary": "Top-up",
        "description": "top-up a specific account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "top-up",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Top-up"
        ]
      },
      "parameters": []
    },
    "/members/{tranWebMemberId}/transactions/{transactionId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/payment"
            }
          }
        },
        "description": "Get a transaction request details by id.\n\nReturn type is `transaction`",
        "summary": "Get Transaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "get-transaction",
        "tags": [
          "Transactons"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "tranWebMemberId",
          "in": "path",
          "required": true,
          "description": "Member ID from platform"
        },
        {
          "type": "string",
          "name": "transactionId",
          "in": "path",
          "required": true,
          "description": "Transaction ID"
        }
      ]
    },
    "/members/{tranWebMemberId}/topups/{transactionId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/topup"
            }
          }
        },
        "description": "Get a top-up transaction request details by transactionId.",
        "summary": "Get top-up detail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "get-top-up",
        "tags": [
          "Top-up"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "tranWebMemberId",
          "in": "path",
          "required": true,
          "description": "Member ID from platform"
        },
        {
          "type": "string",
          "name": "transactionId",
          "in": "path",
          "required": true,
          "description": "Transaction ID"
        }
      ]
    },
    "/members": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/member"
            }
          }
        },
        "summary": "Create Member",
        "description": "Create a sub account for each host to receive payment in Lianlian Pay bank partner's system.\n\nReturn type is `Member` ojbect.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Member"
        ],
        "operationId": "create-member",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "tranWebMemberId": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "Member ID from platform"
                },
                "userNickName": {
                  "type": "string",
                  "description": "Member nick name",
                  "maxLength": 150
                },
                "mobile": {
                  "type": "string",
                  "description": "Mobile number",
                  "maxLength": 30
                },
                "email": {
                  "type": "string",
                  "description": "Email address",
                  "maxLength": 150
                },
                "remark": {
                  "type": "string",
                  "description": "Remark",
                  "maxLength": 300
                }
              },
              "required": [
                "tranWebMemberId",
                "userNickName"
              ]
            },
            "description": ""
          }
        ]
      },
      "parameters": []
    },
    "/members/{tranWebMemberId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/member"
            }
          }
        },
        "summary": "Get Member",
        "description": "Get the sub account detail information of a host in Lianlian Pay bank partner's system by its ID.\n\nReturn type is `Member` object",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Member"
        ],
        "operationId": "get-member"
      },
      "parameters": [
        {
          "type": "string",
          "name": "tranWebMemberId",
          "in": "path",
          "required": true,
          "description": "Member ID from platform"
        }
      ],
      "delete": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "summary": "Delete Memeber",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Member"
        ],
        "description": "Delete the sub account of the host in Lianlian Pay partner's bank system.",
        "operationId": "delete-member"
      }
    },
    "/members/{tranWebMemberId}/bankaccounts/{bankAccountNumber}": {
      "delete": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "summary": "Remove Bank Account",
        "description": "Remove a beneficiary bank account in Lianlian Pay bank partner's system for a host.\n",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Member"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "remove-bank-account"
      },
      "parameters": [
        {
          "type": "string",
          "name": "tranWebMemberId",
          "in": "path",
          "required": true,
          "description": "Member ID from platform"
        },
        {
          "type": "string",
          "name": "bankAccountNumber",
          "in": "path",
          "required": true,
          "description": "Bank account number or card number"
        }
      ],
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Verify Bank Account",
        "operationId": "verify-bank-account",
        "tags": [
          "Member"
        ],
        "description": "Request to verify a host's beneficiary bank account in Lianlian Pay bank partner's system.\n\nPrivate owned beneficiary account is verify by SMS text and entity owned beneficiary account is verify by random amount deposited into beneficiary account.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "verifyType": {
                  "type": "string",
                  "description": "Verification type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | UnionPay verification |\n| 2 | Small amount verification |",
                  "enum": [
                    "1",
                    "2"
                  ],
                  "maxLength": 2
                },
                "verifyInfo": {
                  "type": "string",
                  "maxLength": 10,
                  "description": "Input SMS code if verifyType=1\nInput amount of receiving fund if verifyType=2"
                }
              },
              "required": [
                "verifyType",
                "verifyInfo"
              ]
            }
          }
        ]
      },
      "get": {
        "summary": "Get fund transfer status",
        "operationId": "get-fund-transfer-status",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "maxLength": 2,
                  "enum": [
                    "0",
                    "1",
                    "2"
                  ],
                  "description": "Status, one of:\n\n| Code | Description |\n|------|-------------|\n| 0 | Success |\n| 1 | Failed |\n| 2 | Pending |"
                },
                "failMsg": {
                  "type": "string",
                  "maxLength": 300,
                  "description": "Error message if applicable"
                }
              },
              "required": [
                "status"
              ]
            }
          }
        },
        "description": "get the transfer status for small amount verification",
        "tags": [
          "Member"
        ]
      }
    },
    "/members/{tranWebMemberId}/bankaccounts": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "enum": [
                "0",
                "1"
              ],
              "description": "whether the bank account need to verify, one of:\n\n| Code | Description |\n|------|-------------|\n| 0 | Need toverify |\n| 1 | No need to verify |\n\n",
              "properties": {
                "needVerify": {
                  "type": "string",
                  "enum": [
                    "0",
                    "1"
                  ],
                  "maxLength": 2,
                  "description": "Whether the bank account need to verify, one of:\n\n| Code | Description |\n|------|-------------|\n| 0 | need to verify |\n| 1 | no need to verify |\n\n\n"
                }
              },
              "required": [
                "needVerify"
              ]
            },
            "headers": {}
          }
        },
        "summary": "Add Bank Account",
        "tags": [
          "Member"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Add a beneficiary bank account for payout and bind to the sub account in Lianlian Pay bank partner's system for a host.",
        "operationId": "add-bank-account",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "verifyType": {
                  "type": "string",
                  "maxLength": 1,
                  "enum": [
                    "1",
                    "2"
                  ],
                  "description": "Verification type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | UnionPay verification |\n| 2 | Small amount verification |"
                },
                "memberIdType": {
                  "type": "string",
                  "description": "ID type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | National ID |\n| 4 | Chinese Passport|\n| 52 | Business Registration Certificate |\n| 73 | Unified social credit code |",
                  "enum": [
                    "1",
                    "4",
                    "52",
                    "73"
                  ],
                  "maxLength": 2
                },
                "memberName": {
                  "type": "string",
                  "description": "Member name",
                  "maxLength": 150
                },
                "memberIdNumber": {
                  "type": "string",
                  "description": "Member ID number",
                  "maxLength": 32
                },
                "bankAccountNumber": {
                  "type": "string",
                  "description": "Bank account number or card number",
                  "maxLength": 50
                },
                "bankName": {
                  "type": "string",
                  "description": "Bank name",
                  "maxLength": 80
                },
                "bankCnapsCode": {
                  "type": "string",
                  "description": "Bank code defined in China National Advanced Payment System",
                  "maxLength": 30
                },
                "mobile": {
                  "type": "string",
                  "description": "Mobile number registered in bank",
                  "maxLength": 30
                }
              },
              "required": [
                "verifyType",
                "memberIdType",
                "memberName",
                "memberIdNumber",
                "bankAccountNumber",
                "bankName",
                "bankCnapsCode",
                "mobile"
              ]
            }
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "tranWebMemberId",
          "in": "path",
          "required": true,
          "description": "Member ID from platform"
        }
      ]
    },
    "/members/{tranWebMemberId}/payouts": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/payout"
            }
          }
        },
        "summary": "Create Payout",
        "description": "Payout from sub account to beneficiary bank account. Payout amount should no larger than the sub account balance.\n\nReturn type is `Payout` object.\n",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Payout"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "create-payout",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "payoutId": {
                  "type": "string",
                  "description": "Payout ID generated in Platform System",
                  "maxLength": 52
                },
                "bankAccountNumber": {
                  "type": "string",
                  "description": "Beneficiary bank account number",
                  "maxLength": 50
                },
                "amount": {
                  "type": "string",
                  "description": "Cash out amount",
                  "maxLength": 20
                },
                "payoutDate": {
                  "type": "string",
                  "description": "Transaction date",
                  "maxLength": 8
                },
                "payoutTime": {
                  "type": "string",
                  "description": "Transaction time",
                  "maxLength": 20
                },
                "remark": {
                  "type": "string",
                  "description": "Remark",
                  "maxLength": 300
                }
              },
              "required": [
                "payoutId",
                "bankAccountNumber",
                "amount",
                "payoutDate",
                "payoutTime"
              ]
            },
            "description": ""
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "tranWebMemberId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/members/{tranWebMemberId}/payouts/{payoutId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/payout"
            }
          },
          "": {
            "schema": {
              "$ref": "#/definitions/payout"
            }
          }
        },
        "summary": "Get Payout",
        "description": "Get a payout request details by payoutId.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Payout"
        ],
        "operationId": "get-payout"
      },
      "parameters": [
        {
          "type": "string",
          "name": "tranWebMemberId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "payoutId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/reports/{name}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/report"
            }
          }
        },
        "summary": "Get Report",
        "description": "Download report by `name`\n\nReturn type is `Report` object",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Report"
        ],
        "operationId": "get-report"
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "Report name"
        }
      ]
    },
    "/documents/{documentId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string",
              "format": "byte",
              "description": "Document data streaming"
            }
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        },
        "summary": "Download Document",
        "description": "Download document file by `dcoumentId`. \n",
        "operationId": "download-document",
        "tags": [
          "Document"
        ]
      },
      "parameters": [
        {
          "name": "documentId",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "Document id"
        }
      ]
    },
    "/events": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/event"
              }
            }
          }
        },
        "summary": "Get Event List",
        "description": "Get a list of Lianlian Pay bank partner's system generated events. If no events, empty list will be returned\n\nReturn type is List<`Event`>",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Event"
        ],
        "operationId": "get-event-list"
      }
    },
    "/events/{eventId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/event"
            }
          }
        },
        "summary": "Get Event",
        "description": "Get a Lianlian Pay bank partner's system generated event by `eventId`\n\nReturn type is `Event` object",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Event"
        ],
        "operationId": "get-event"
      },
      "parameters": [
        {
          "name": "eventId",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "Event id in Lianlian Pay's system"
        }
      ]
    },
    "/members/{tranWebMemberId}/bankaccounts}": {
      "parameters": [
        {
          "type": "string",
          "name": "tranWebMemberId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get bank account wait to be verified",
        "tags": [
          "Member"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/bank-account"
            }
          }
        },
        "operationId": "get-members-tranWebMemberId-bankaccounts",
        "description": "Get bank account wait to be verified"
      }
    }
  },
  "definitions": {
    "webhook": {
      "type": "object",
      "title": "Webhook",
      "description": "Object used in Lianlian Pay's system to describe the client registration of event callbacks.\n\nLianlian Pay uses this object to identify events which should be pushed back to client's url.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Webhook registration id in Lianlian Pay's system"
        },
        "url": {
          "type": "string",
          "description": "Client callback url"
        },
        "isEnable": {
          "type": "boolean",
          "description": "Enable/disable callbacks"
        },
        "createTime": {
          "type": "string",
          "description": "Webhook registration time, UTC+0 timestamp"
        },
        "modifyTime": {
          "type": "string",
          "description": "Webhook last modified time, UTC+0 timestamp"
        },
        "topics": {
          "type": "array",
          "description": "Event topics in Lianlian Pay's system",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "url",
        "isEnable",
        "createTime",
        "topics"
      ]
    },
    "event": {
      "type": "object",
      "title": "Event",
      "description": "Event object generated during business processing in Lianlian Pay's system. ",
      "properties": {
        "id": {
          "type": "string",
          "description": "Event id in Lianlian Pay's system"
        },
        "topic": {
          "type": "array",
          "description": "Event topics defined in Lianlian Pay's system.\n| Topic | Description |\n|-------|-------------|\n| member.payout.success | Payout success. |\n| member.payout.failed | Payout failed. |\n| reconciliation.payment.created | Payment reconciliation documents created. |\n| reconciliation.coupon.created | Coupon reconciliation documents created. |\n| reconciliation.payout.created | Payout reconciliation documents created. |\n| reconciliation.balance.created | End-of-day member account balance reconciliation documents created. |",
          "items": {
            "type": "string"
          }
        },
        "createTime": {
          "type": "string",
          "description": "Event created time, UTC+0 timestamp"
        },
        "data": {
          "type": "object",
          "description": "Event details"
        }
      },
      "required": [
        "id",
        "topic",
        "createTime",
        "data"
      ]
    },
    "report": {
      "type": "object",
      "title": "Report",
      "description": "Report object defined in Lianlian Pay's system. Used to download reports such as reconcilation files generated in Lianlian Pay bank partner's system.\n\n<!-- theme: info -->\n>Two ways to access daily reconcilation files:\n>\n>1. Request \"Get Report\" API with file name following below reconciliation file name format defination after 08:00 PM(GMT+8) everyday to download.\n>\n>2. Enroll Lianlian Pay Webhook and register `reconciliation.payment.created`, `reconciliation.payout.created`, `reconciliation.memberEODBalance.created`, 'reconciliation.coupon.created' topics to receive file ready notices, then download by requesting \"Get Report\" API.\n> \n\nApplicable reconciliation file types:\n\n| Name Format | Description |\n|-----------|-------------|\n| PAYMENT_YYYYMMDD.gz | Payment request reconcilation file, header is CnsmrSeqNo&TranWebMemberId&TransType&MemberFillAmt&Commission&TranDate&TranTime |\n| PAYOUT_YYYYMMDD.gz | Payout request reconcilation file, header is CnsmrSeqNo&TranWebMemberId&CashAmt&TranDate&TranTime |\n| BALANCE_YYYYMMDD.gz | Member account EOD balance file, header is TranWebMemberId&Amt |\n| COUPON_YYYYMMDD.gz | Coupon request reconcilation file, header is CnsmrSeqNo&TranWebMemberId&TransType&MemberFillAmt&TranDate&TranTime |",
      "required": [
        "id",
        "name",
        "size",
        "createTime"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Report id"
        },
        "name": {
          "type": "string",
          "description": "Report name"
        },
        "size": {
          "type": "number",
          "description": "Report file size"
        },
        "createTime": {
          "type": "string",
          "description": "Report create time"
        }
      }
    },
    "bank-account": {
      "type": "object",
      "title": "Bank Account",
      "description": "Beneficiary bank account object defined in Lianlian Pay bank partner's system.",
      "properties": {
        "verifyType": {
          "type": "string",
          "enum": [
            "1",
            "2"
          ],
          "maxLength": 1,
          "minLength": 1,
          "description": "Verification type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | UnionPay verification |\n| 2 | Small amount verification |"
        },
        "memberIdType": {
          "type": "string",
          "description": "ID type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | National ID |\n| 4 | Chinese Passport|\n| 52 | Business Registration Certificate |\n| 73 | Unified social credit code |",
          "enum": [
            "1",
            "52",
            "4",
            "73"
          ],
          "maxLength": 5
        },
        "memberIdNumber": {
          "type": "string",
          "description": "Member ID number",
          "maxLength": 32
        },
        "memberName": {
          "type": "string",
          "description": "Member name",
          "maxLength": 150
        },
        "bankAccountNumber": {
          "type": "string",
          "description": "Bank account number or card number",
          "maxLength": 50
        },
        "bankName": {
          "type": "string",
          "description": "Bank name",
          "maxLength": 80
        },
        "bankCnapsCode": {
          "type": "string",
          "description": "Bank code defined in China National Advanced Payment System",
          "maxLength": 30
        },
        "mobile": {
          "type": "string",
          "description": "Mobile number registered in bank",
          "maxLength": 30
        }
      }
    },
    "member": {
      "type": "object",
      "title": "Member",
      "description": "Member account of a single platform host defined in Lianlian Pay bank partner's system.",
      "properties": {
        "tranWebMemberId": {
          "type": "string",
          "description": "Member ID from platform",
          "maxLength": 32
        },
        "userNickName": {
          "type": "string",
          "description": "Member nick name",
          "maxLength": 150
        },
        "mobile": {
          "type": "string",
          "description": "Mobile number",
          "maxLength": 30
        },
        "email": {
          "type": "string",
          "description": "Email address",
          "maxLength": 150
        },
        "acctAvailBal": {
          "type": "string",
          "description": "Account balance",
          "maxLength": 20
        },
        "cashAmt": {
          "type": "string",
          "description": "Payout balance, less than or equal to `AcctAvailBal`",
          "maxLength": 20
        },
        "maintenanceDate": {
          "type": "string",
          "description": "Modify date",
          "maxLength": 8
        },
        "remark": {
          "type": "string",
          "description": "Remark",
          "maxLength": 300
        },
        "bankAccounts": {
          "type": "array",
          "description": "Beneficiary bank accounts",
          "items": {
            "$ref": "#/definitions/bank-account"
          }
        }
      }
    },
    "transaction": {
      "type": "object",
      "title": "Transaction",
      "description": "Data set defined in Lianlian Pay bank partner's system to describe a transaction related to host's member account",
      "properties": {
        "functionType": {
          "type": "string",
          "description": "function type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | Initial a transaction |\n| 2 | Cancel a transaction |",
          "maxLength": 1,
          "minLength": 1,
          "enum": [
            "1",
            "2"
          ]
        },
        "transactionType": {
          "type": "string",
          "description": "Transaction type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | Member account credit for fund in transit |\n| 2 | Member account credit for marketing fund |\n| 3 | Member account debit for platform fee |",
          "maxLength": 1,
          "enum": [
            "1",
            "2",
            "3"
          ],
          "minLength": 1
        },
        "transactionId": {
          "type": "string",
          "maxLength": 52,
          "description": "Transaction ID"
        },
        "oldTransactionId": {
          "type": "string",
          "description": "Orignal transactionId if the functionType=2",
          "maxLength": 52
        },
        "tranWebMemberId": {
          "type": "string",
          "description": "Member id",
          "maxLength": 32
        },
        "amount": {
          "type": "string",
          "description": "Payment amount",
          "maxLength": 20
        },
        "commission": {
          "type": "string",
          "description": "Commission fee",
          "maxLength": 20
        },
        "payChannelType": {
          "type": "string",
          "description": "Mandatory if transactionType = 1\n\nAcquirer, one of:\n\n| Code | Description |\n|------|-------------|\n| 0001 | Wechat |\n| 0002 | Alipay |",
          "enum": [
            "001",
            "002"
          ],
          "maxLength": 20
        },
        "payChannelAssignMerNo": {
          "type": "string",
          "description": "Mandatory if transactionType = 1\n\nMerchant number assigned to platform in acquirer's system",
          "maxLength": 50
        },
        "payChannelTranSeqNo": {
          "type": "string",
          "description": "Mandatory if transactionType = 1\n\nTransaction number in acquirer's system",
          "maxLength": 52
        },
        "tranDate": {
          "type": "string",
          "description": "Transaction date",
          "maxLength": 8
        },
        "tranTime": {
          "type": "string",
          "description": "Transaction time",
          "maxLength": 20
        },
        "remark": {
          "type": "string",
          "description": "Remark",
          "maxLength": 300
        },
        "status": {
          "type": "string",
          "description": "Status, one of:\n\n| Code | Description |\n|------|-------------|\n| 0 | Success |\n| 1 | Failed |\n| 5 | Pending |\n| 6 | in progress |",
          "enum": [
            0,
            1,
            5,
            6
          ],
          "maxLength": 2
        },
        "failMsg": {
          "type": "string",
          "description": "Error message if applicable",
          "maxLength": 300
        }
      }
    },
    "payout": {
      "type": "object",
      "title": "Payout ",
      "description": "Data set defiend in Lianlian Pay bank partner's system to describe a pay from sub account to a beneficiary bank account.",
      "properties": {
        "payoutId": {
          "type": "string",
          "description": "Payout ID generated in Platform System",
          "maxLength": 52
        },
        "TranWebMemberId": {
          "type": "string",
          "description": "Memeber id",
          "maxLength": 32
        },
        "bankAccountNumber": {
          "type": "string",
          "description": "Beneficiary bank account number",
          "maxLength": 50
        },
        "bankName": {
          "type": "string",
          "maxLength": 52,
          "description": "Bank name"
        },
        "amount": {
          "type": "string",
          "description": "Cash out amount",
          "maxLength": 20
        },
        "payoutDate": {
          "type": "string",
          "description": "Transaction date",
          "maxLength": 8
        },
        "payoutTime": {
          "type": "string",
          "description": "Transaction time",
          "maxLength": 20
        },
        "remark": {
          "type": "string",
          "description": "Remark",
          "maxLength": 300
        },
        "status": {
          "type": "string",
          "description": "Request status, one of:\n\n| Code | Description |\n|------|-------------|\n| 0 | Success |\n| 1 | Failed |\n| 2 | Need confirm |\n| 5 | Pending |\n| 6 | In progress |",
          "enum": [
            "0",
            "1",
            "5",
            "6",
            "2"
          ],
          "maxLength": 2
        },
        "failMsg": {
          "type": "string",
          "description": "Error message if appicable ",
          "maxLength": 300
        }
      }
    },
    "topup": {
      "title": "Topup",
      "type": "object",
      "description": "Data set defined in Lianlian Pay bank partner's system to describe a top-up transaction related to specific account",
      "properties": {
        "functionType": {
          "type": "string",
          "enum": [
            "1",
            "2"
          ],
          "description": "function type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | Initial a topup |\n| 2 | Cancel a topup |",
          "maxLength": 1,
          "minLength": 1
        },
        "transactionType": {
          "type": "string",
          "minLength": 1,
          "maxLength": 1,
          "enum": [
            "1"
          ],
          "description": "transaction type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | Top-up for coupon account |"
        },
        "transactionId": {
          "type": "string",
          "maxLength": 52,
          "description": "Transaction ID"
        },
        "oldTransactionId": {
          "type": "string",
          "maxLength": 52,
          "description": "Orignal transaction ID if funactionType=1"
        },
        "amount": {
          "type": "string",
          "maxLength": 20,
          "description": "Top-up amount"
        },
        "remark": {
          "type": "string",
          "maxLength": 300,
          "description": "Remark"
        },
        "status": {
          "type": "string",
          "enum": [
            "0",
            "1",
            "5",
            "6"
          ],
          "maxLength": 2,
          "description": "Transaction status, one of:\n\n| Code | Description |\n|------|-------------|\n| 0 | Success |\n| 1 | Failed |\n| 5 | Pending |\n| 6 | In progress |"
        },
        "failMsg": {
          "type": "string",
          "maxLength": 300,
          "description": "Error message if applicable"
        }
      }
    }
  },
  "parameters": {},
  "tags": [
    {
      "name": "Member"
    },
    {
      "name": "Payment"
    },
    {
      "name": "Coupon"
    },
    {
      "name": "Payout"
    },
    {
      "name": "Report"
    },
    {
      "name": "Event"
    },
    {
      "name": "Webhook"
    },
    {
      "name": "Document"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ]
}